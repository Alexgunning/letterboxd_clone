export const LEVELS = {
    fatal: {
        label: 'fatal',
        number: 6,
    },
    error: {
        label: 'error',
        number: 5,
    },
    warn: {
        label: 'warn',
        number: 4,
    },
    info: {
        label: 'info',
        number: 3,
    },
    debug: {
        label: 'debug',
        number: 2,
    },
    trace: {
        label: 'trace',
        number: 1,
    },
};
export const LEVELS_BY_NUM = Object.values(LEVELS).reduce((lookup, entry) => Object.assign(lookup, { [entry.number]: entry }), {});
/**
 * Parser for log level. The given value is treated case insensitive.
 */
export const parser = {
    info: {
        typeName: 'LogLevel',
        valid: Object.entries(LEVELS)
            .map(([label]) => label)
            .join(', '),
    },
    run: (raw) => {
        var _a, _b;
        return (_b = (_a = LEVELS[raw.toLowerCase()]) === null || _a === void 0 ? void 0 : _a.label) !== null && _b !== void 0 ? _b : null;
    },
};
//# sourceMappingURL=level.js.map